version: '3'
services: 
  db: #Récupération depuis le docker-compose de angular-project 
    image: mysql:8.3
    container_name: angular_project-db-1
    restart: always
    environment:
      MYSQL_DATABASE: papeterie
      MYSQL_USER: moi
      MYSQL_PASSWORD: moi123
      MYSQL_ROOT_PASSWORD: aaaaaaaa
    volumes:
      - ./bdd_configuration:/etc
      - ./bdd_papeterie:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
  
  # Il est possible de dupliquer ce service via deploy: mode: replicated replicas: 2 endpoint_mode:vip 
  webapp: # Les deux services ci-dessous sont issu des Docker Images de CDA uploadé sur mon docker.io
    image: meynierleo/webapp-papeterie:latest
    container_name: angular_project-webapp-1
    ports:
      - "3333:80"
    depends_on:
      - api    
    
  
  api: 
    image: meynierleo/api-papeterie:latest
    container_name: angular_project-api-1
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - db

# Service de monitoring 
  monitoring:
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    volumes:
        - ./portainer:/data
        - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=#ASRBD@ 
    ports:
      - "3000:3000"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    #ports:
    #- 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    - /etc/machine-id:/etc/machine-id:ro
    - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id:ro
